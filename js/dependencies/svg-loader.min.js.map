{"version":3,"file":"svg-loader.min.js","mappings":"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","sources":["webpack://external-svg-loader/./lib/counter.js","webpack://external-svg-loader/./lib/css-url-fixer.js","webpack://external-svg-loader/./lib/scope-css.js","webpack://external-svg-loader/./node_modules/idb-keyval/dist/idb-keyval.mjs","webpack://external-svg-loader/webpack/bootstrap","webpack://external-svg-loader/webpack/runtime/define property getters","webpack://external-svg-loader/webpack/runtime/hasOwnProperty shorthand","webpack://external-svg-loader/webpack/runtime/make namespace object","webpack://external-svg-loader/./svg-loader.js"],"sourcesContent":["\"use strict\";\n\nlet counter = 0;\n\nmodule.exports = {\n    incr () {\n        return ++counter;\n    },\n\n    decr () {\n        return --counter;\n    },\n\n    curr () {\n        return counter;\n    }\n};","\"use strict\";\n\n/**\n * Handle all SVG references correctly, which can be\n *   a) via attributes: url(#abc)\n *   b) via tags: <use href=\"#abc\" />\n *   c) via css: .class { fill: url(#abc) }\n * @param {object} idMap: Map previous id with the new unique id\n * @param {string} attributeValueOrCSS\n * @param {string} attributeName\n * @returns attribute or css value with correct id\n */\nmodule.exports = (idMap, attributeValueOrCSS, attributeName = \"\") => {\n    const svgRefRegex = /url\\(['\"]?#([\\w:.-]+)['\"]?\\)/g;\n    const urlRefRegex = /#([\\w:.-]+)/g;\n\n    // fill=\"url(#abc)\" -> fill=\"url(#abc_2)\"\n    // Use the unique IDs created previously\n    if (attributeValueOrCSS.match(svgRefRegex)) {\n        attributeValueOrCSS = attributeValueOrCSS.replace(svgRefRegex, function (g0, g1) {\n            if (!idMap[g1]) {\n                return g0;\n            }\n            return `url(#${idMap[g1]})`;\n        });\n    }\n\n    // <use href=\"#X\" -> <use href=\"#X_23\"\n    // Use the unique IDs created previously\n    if ([\"href\", \"xlink:href\"].includes(attributeName)) {\n        if (attributeValueOrCSS.match(urlRefRegex)) {\n            attributeValueOrCSS = attributeValueOrCSS.replace(urlRefRegex, function (g0, g1) {\n                if (!idMap[g1]) {\n                    return g0;\n                }\n                return `#${idMap[g1]}`;\n            });\n        }\n    }\n    return attributeValueOrCSS;\n};\n","\"use strict\";\n\n// Source: https://github.com/thomaspark/scoper\nmodule.exports = (css, prefix, idMap) => {\n    const re = new RegExp(\"([^\\r\\n,{}]+)(,(?=[^}]*{)|\\s*{)\", \"g\");\n    css = css.replace(re, function (g0, g1, g2) {\n\n        if (g1.match(/^\\s*(@media|@.*keyframes|to|from|@font-face|1?[0-9]?[0-9])/)) {\n            return g1 + g2;\n        }\n\n        const idRegex = /#(\\w+)/;\n        const match = g1.match(idRegex);\n\n        if (match && idMap[match[1]]) {\n            g1 = g1.replace(match[0], `#${idMap[match[1]]}`);\n        }\n\n        g1 = g1.replace(/^(\\s*)/, \"$1\" + prefix + \" \");\n\n        return g1 + g2;\n    });\n\n    return css;\n};","class Store {\r\n    constructor(dbName = 'keyval-store', storeName = 'keyval') {\r\n        this.storeName = storeName;\r\n        this._dbp = new Promise((resolve, reject) => {\r\n            const openreq = indexedDB.open(dbName, 1);\r\n            openreq.onerror = () => reject(openreq.error);\r\n            openreq.onsuccess = () => resolve(openreq.result);\r\n            // First time setup: create an empty object store\r\n            openreq.onupgradeneeded = () => {\r\n                openreq.result.createObjectStore(storeName);\r\n            };\r\n        });\r\n    }\r\n    _withIDBStore(type, callback) {\r\n        return this._dbp.then(db => new Promise((resolve, reject) => {\r\n            const transaction = db.transaction(this.storeName, type);\r\n            transaction.oncomplete = () => resolve();\r\n            transaction.onabort = transaction.onerror = () => reject(transaction.error);\r\n            callback(transaction.objectStore(this.storeName));\r\n        }));\r\n    }\r\n}\r\nlet store;\r\nfunction getDefaultStore() {\r\n    if (!store)\r\n        store = new Store();\r\n    return store;\r\n}\r\nfunction get(key, store = getDefaultStore()) {\r\n    let req;\r\n    return store._withIDBStore('readonly', store => {\r\n        req = store.get(key);\r\n    }).then(() => req.result);\r\n}\r\nfunction set(key, value, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.put(value, key);\r\n    });\r\n}\r\nfunction del(key, store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.delete(key);\r\n    });\r\n}\r\nfunction clear(store = getDefaultStore()) {\r\n    return store._withIDBStore('readwrite', store => {\r\n        store.clear();\r\n    });\r\n}\r\nfunction keys(store = getDefaultStore()) {\r\n    const keys = [];\r\n    return store._withIDBStore('readonly', store => {\r\n        // This would be store.getAllKeys(), but it isn't supported by Edge or Safari.\r\n        // And openKeyCursor isn't supported by Safari.\r\n        (store.openKeyCursor || store.openCursor).call(store).onsuccess = function () {\r\n            if (!this.result)\r\n                return;\r\n            keys.push(this.result.key);\r\n            this.result.continue();\r\n        };\r\n    }).then(() => keys);\r\n}\n\nexport { Store, get, set, del, clear, keys };\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","\"use strict\";\n\nconst { get, set, del } = require(\"idb-keyval\");\nconst cssScope = require(\"./lib/scope-css\");\nconst cssUrlFixer = require(\"./lib/css-url-fixer\");\nconst counter = require(\"./lib/counter\");\n\nconst isCacheAvailable = async (url) => {\n    try {\n        let item = await get(`loader_${url}`);\n\n        if (!item) {\n            return;\n        }\n\n        item = JSON.parse(item);\n\n        if (Date.now() < item.expiry) {\n            return item.data;\n        } else {\n            del(`loader_${url}`);\n            return;\n        }\n    } catch (e) {\n        return;\n    }\n};\n\nconst setCache = async (url, data, cacheOpt) => {\n    try {\n        const cacheExp = parseInt(cacheOpt, 10);\n        \n        await set(`loader_${url}`, JSON.stringify({\n            data,\n            expiry: Date.now() + (Number.isNaN(cacheExp) ? 60 * 60 * 1000 * 24 : cacheExp)\n        }));\n\n    } catch (e) {\n        console.error(e);\n    };\n};\n\nconst DOM_EVENTS = [];\nconst getAllEventNames = () => {\n    if (DOM_EVENTS.length) {\n        return DOM_EVENTS;\n    }\n\n    for (const prop in document.head) {\n        if (prop.startsWith(\"on\")) {\n            DOM_EVENTS.push(prop);\n        }\n    }\n\n    return DOM_EVENTS;\n};\n\nconst attributesSet = {};\nconst renderBody = (elem, options, body) => {\n    const { enableJs, disableUniqueIds, disableCssScoping } = options;\n\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(body, \"text/html\");\n    const fragment = doc.querySelector(\"svg\");\n\n    const eventNames = getAllEventNames();\n\n    // When svg-loader is loading in the same element, it's\n    // important to keep track of original properties.\n    const elemAttributesSet = attributesSet[elem.getAttribute(\"data-id\")] || new Set();\n\n    const elemUniqueId = elem.getAttribute(\"data-id\") || `svg-loader_${counter.incr()}`;\n\n    const idMap = {};\n\n    if (!disableUniqueIds) {\n        // Append a unique suffix for every ID so elements don't conflict.\n        Array.from(doc.querySelectorAll(\"[id]\")).forEach((elem) => {\n            const id = elem.getAttribute(\"id\");\n            const newId = `${id}_${counter.incr()}`;\n            elem.setAttribute(\"id\", newId);\n\n            idMap[id] = newId;\n        });\n    }\n\n    Array.from(doc.querySelectorAll(\"*\")).forEach((elem) => {\n        // Unless explicitly set, remove JS code (default)\n        if (elem.tagName === \"script\") {\n            if (!enableJs) {\n                elem.remove();\n                return;\n            } else {\n                const scriptEl = document.createElement(\"script\");\n                scriptEl.innerHTML = elem.innerHTML;\n                document.body.appendChild(scriptEl);\n            }\n        }\n\n        for (let i = 0; i < elem.attributes.length; i++) {\n            const {\n                name,\n                value\n            } = elem.attributes[i];\n\n            const newValue = cssUrlFixer(idMap, value, name);\n\n            if (value !== newValue) {\n                elem.setAttribute(name, newValue);\n            }\n\n            // Remove event functions: onmouseover, onclick ... unless specifically enabled\n            if (eventNames.includes(name.toLowerCase()) && !enableJs) {\n                elem.removeAttribute(name);\n                continue;\n            }\n\n            // Remove \"javascript:...\" unless specifically enabled\n            if ([\"href\", \"xlink:href\"].includes(name) && value.startsWith(\"javascript\") && !enableJs) {\n                elem.removeAttribute(name);\n            }\n        }\n\n        // .first -> [data-id=\"svg_loader_341xx\"] .first\n        // Makes sure that class names don't conflict with each other.\n        if (elem.tagName === \"style\" && !disableCssScoping) {\n            let newValue = cssScope(elem.innerHTML, `[data-id=\"${elemUniqueId}\"]`, idMap);\n            newValue = cssUrlFixer(idMap, newValue);\n            if (newValue !== elem.innerHTML)\n                elem.innerHTML = newValue;\n        }\n    });\n\n    for (let i = 0; i < fragment.attributes.length; i++) {\n        const {\n            name,\n            value\n        } = fragment.attributes[i];\n\n        // Don't override the attributes already defined, but override the ones that\n        // were in the original element\n        if (!elem.getAttribute(name) || elemAttributesSet.has(name)) {\n            elemAttributesSet.add(name);\n            elem.setAttribute(name, value);\n        }\n    }\n\n    attributesSet[elemUniqueId] = elemAttributesSet;\n\n    elem.setAttribute(\"data-id\", elemUniqueId);\n    elem.innerHTML = fragment.innerHTML;\n\n    const event = new CustomEvent('iconload', {\n        bubbles: true\n    });\n    elem.dispatchEvent(event);\n\n    if (elem.getAttribute('oniconload')) {\n        // Handling (and executing) event attribute for our event (oniconload)\n        // isn't straightforward. Because a) the code is a raw string b) there's\n        // no way to specify the context for execution. So, `this` in the attribute\n        // will point to `window` instead of the element itself. \n        //\n        // Here we are recycling a rarely used GlobalEventHandler 'onloadedmetadata'\n        // and offloading the execution to the browser. This is a hack, but because\n        // the event doesn't bubble, it shouldn't affect anything else in the code. \n        elem.setAttribute('onloadedmetadata', elem.getAttribute('oniconload'));\n        \n        const event = new CustomEvent('loadedmetadata', {\n            bubbles: false\n        });\n        elem.dispatchEvent(event);\n\n        elem.removeAttribute('onloadedmetadata');\n    }\n};\n\nconst requestsInProgress = {};\nconst memoryCache = {};\n\nconst renderIcon = async (elem) => {\n    const src = elem.getAttribute(\"data-src\");\n    const cacheOpt = elem.getAttribute(\"data-cache\");\n\n    const enableJs = elem.getAttribute(\"data-js\") === \"enabled\";\n    const disableUniqueIds = elem.getAttribute(\"data-unique-ids\") === \"disabled\";\n    const disableCssScoping = elem.getAttribute(\"data-css-scoping\") === \"disabled\";\n\n    const lsCache = await isCacheAvailable(src);\n    const isCachingEnabled = cacheOpt !== \"disabled\";\n\n    const renderBodyCb = renderBody.bind(self, elem, { enableJs, disableUniqueIds, disableCssScoping });\n\n    // Memory cache optimizes same icon requested multiple\n    // times on the page\n    if (memoryCache[src] || (isCachingEnabled && lsCache)) {\n        const cache = memoryCache[src] || lsCache;\n\n        renderBodyCb(cache);\n    } else {\n        // If the same icon is being requested to rendered\n        // avoid firing multiple XHRs\n        if (requestsInProgress[src]) {\n            setTimeout(() => renderIcon(elem), 20);\n            return;\n        }\n\n        requestsInProgress[src] = true;\n\n        fetch(src)\n            .then((response) => {\n                if (!response.ok) {\n                    throw Error(`Request for '${src}' returned ${response.status} (${response.statusText})`);\n                }\n                return response.text();\n            })\n            .then((body) => {\n                const bodyLower = body.toLowerCase().trim();\n\n                if (!(bodyLower.startsWith(\"<svg\") || bodyLower.startsWith(\"<?xml\"))) {\n                    throw Error(`Resource '${src}' returned an invalid SVG file`);\n                }\n\n                if (isCachingEnabled) {\n                    setCache(src, body, cacheOpt);\n                }\n\n                memoryCache[src] = body;\n\n                renderBodyCb(body);\n            })\n            .catch((e) => {\n                console.error(e);\n            })\n            .finally(() => {\n                delete requestsInProgress[src];\n            });\n    }\n};\n\nlet intObserver;\nif (globalThis.IntersectionObserver) {\n    const intObserver = new IntersectionObserver(\n        (entries) => {\n            entries.forEach((entry) => {\n                if (entry.isIntersecting) {\n                    renderIcon(entry.target);\n    \n                    // Unobserve as soon as soon the icon is rendered\n                    intObserver.unobserve(entry.target);\n                }\n            });\n        }, {\n            // Keep high root margin because intersection observer \n            // can be slow to react\n            rootMargin: \"1200px\"\n        }\n    );\n}\n\n\nconst handled = [];\nfunction renderAllSVGs() {\n    Array.from(document.querySelectorAll(\"svg[data-src]:not([data-id])\"))\n        .forEach((element) => {\n            if (handled.indexOf(element) !== -1) {\n                return;\n            }\n\n            handled.push(element);\n            if (element.getAttribute(\"data-loading\") === \"lazy\") {\n                intObserver.observe(element);\n            } else {\n                renderIcon(element);\n            }\n        });\n}\n\nlet observerAdded = false;\nconst addObservers = () => {\n    if (observerAdded) {\n        return;\n    }\n\n    observerAdded = true;\n    const observer = new MutationObserver((mutationRecords) => {\n        const shouldTriggerRender = mutationRecords.some(\n            (record) => Array.from(record.addedNodes).some(\n                (elem) => elem.nodeType === Node.ELEMENT_NODE\n                    && ((elem.getAttribute(\"data-src\") && !elem.getAttribute(\"data-id\")) // Check if the element needs to be rendered\n                        || elem.querySelector(\"svg[data-src]:not([data-id])\")) // Check if any of the element's children need to be rendered\n            )\n        );\n\n        // If any node is added, render all new nodes because the nodes that have already\n        // been rendered won't be rendered again.\n        if (shouldTriggerRender) {\n            renderAllSVGs();\n        }\n\n        // If data-src is changed, re-render\n        mutationRecords.forEach((record) => {\n            if (record.type === \"attributes\") {\n                renderIcon(record.target);\n            }\n        });\n    });\n\n    observer.observe(\n        document.documentElement,\n        {\n            attributeFilter: [\"data-src\"],\n            attributes: true,\n            childList: true,\n            subtree: true\n        }\n    );\n};\n\nif (globalThis.addEventListener) {\n    // Start rendering SVGs as soon as possible\n    const intervalCheck = setInterval(() => {\n        renderAllSVGs();\n    }, 100);\n\n    function init() {\n        clearInterval(intervalCheck);\n    \n        renderAllSVGs();\n        addObservers();\n    }\n\n    if (document.readyState === 'interactive') {\n        init();\n    } else {\n        globalThis.addEventListener(\"DOMContentLoaded\", () => {\n            init();\n        });\n    }\n}\n\n"],"names":["counter","module","exports","incr","decr","curr","idMap","attributeValueOrCSS","attributeName","svgRefRegex","urlRefRegex","match","replace","g0","g1","includes","css","prefix","re","RegExp","g2","Store","constructor","dbName","storeName","this","_dbp","Promise","resolve","reject","openreq","indexedDB","open","onerror","error","onsuccess","result","onupgradeneeded","createObjectStore","_withIDBStore","type","callback","then","db","transaction","oncomplete","onabort","objectStore","store","getDefaultStore","get","key","req","set","value","put","del","delete","clear","keys","openKeyCursor","openCursor","call","push","continue","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","d","definition","o","Object","defineProperty","enumerable","obj","prop","prototype","hasOwnProperty","r","Symbol","toStringTag","cssScope","cssUrlFixer","DOM_EVENTS","attributesSet","renderBody","elem","options","body","enableJs","disableUniqueIds","disableCssScoping","doc","DOMParser","parseFromString","fragment","querySelector","eventNames","length","document","head","startsWith","getAllEventNames","elemAttributesSet","getAttribute","Set","elemUniqueId","Array","from","querySelectorAll","forEach","id","newId","setAttribute","tagName","remove","scriptEl","createElement","innerHTML","appendChild","i","attributes","name","newValue","toLowerCase","removeAttribute","has","add","event","CustomEvent","bubbles","dispatchEvent","requestsInProgress","memoryCache","renderIcon","async","src","cacheOpt","lsCache","url","item","JSON","parse","Date","now","expiry","data","e","isCacheAvailable","isCachingEnabled","renderBodyCb","bind","self","cache","setTimeout","fetch","response","ok","Error","status","statusText","text","bodyLower","trim","cacheExp","parseInt","stringify","Number","isNaN","console","setCache","catch","finally","globalThis","IntersectionObserver","intObserver","entries","entry","isIntersecting","target","unobserve","rootMargin","handled","renderAllSVGs","element","indexOf","observe","observerAdded","addEventListener","intervalCheck","setInterval","init","clearInterval","MutationObserver","mutationRecords","some","record","addedNodes","nodeType","Node","ELEMENT_NODE","documentElement","attributeFilter","childList","subtree","readyState"],"sourceRoot":""}